[include fluidd.cfg]

[include KAMP_Settings.cfg]

[include T0.cfg]
[include T1.cfg]
[include T2.cfg]
[include T3.cfg]
[include T4.cfg]


[include tapchanger/macros.cfg]
[include tapchanger/homing.cfg]
[include tapchanger/tool_detection.cfg]
[include tapchanger/toolchanger-2.4.cfg]



[include my_macros.cfg]


[virtual_sdcard]
path: /home/violet/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[exclude_object]

[respond]   


# This file contains common pin mappings for the Voron Leviathan V1.1
# To use this config, the firmware should be compiled for the STM32F446 with "No bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON Trident 250/300/350mm Leviathan V1.1 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[rounded_path]
resolution: 0.2

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345 acce0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: ^!PC1
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
#diag0_pin: ^!PG1
interpolate: false
run_current: 1.4
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: ^!PC2
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
#diag0_pin: ^!PE10
interpolate: false
run_current: 1.4
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16  
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PC10
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to STEPPER 3
[stepper_z3]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z3]
uart_pin: PG8
#diag_pin: ^!PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to STEPPER 0
##  Heater - HEATER
##  Thermistor - TH0
#[extruder]
#step_pin: PD10
#dir_pin: PD9
#enable_pin: !PD13
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #BMG Gear Ratio
#microsteps: 32
#full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PG10
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:ATC Semitec 104NT-4-R025H42G
#sensor_pin: PA1 #TH0
#pullup_resistor: 2200
#min_temp: 10
#max_temp: 270
#max_power: 1.0
#min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Connected to STEPPER 4
#[tmc2209 extruder]
#uart_pin: PD11
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
sensor_type:ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769



#####################################################################
#   Fan Control
#####################################################################



[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PF7
##tachometer_pin: PF6
kick_start_time: 0.5
heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PF9
##tachometer_pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   Filament sensor
#####################################################################

#[filament_switch_sensor Filament]
#pause_on_runout: True
#runout_gcode: M600
#insert_gcode:
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: !PC0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
[led caselight]
white_pin: PE6
initial_WHITE: 0.0
cycle_time: 0.00025

## Neopixel (Optional)
## Connected to NEOPIXEL
# [neopixel rgb_light]
# pin: PF10
# chain_count: 3
# color_order: GRBW
# initial_RED: 0.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# initial_WHITE: 0.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[force_move]
    enable_force_move: True

[homing_override]
axes: xyz
gcode:
    INITIALIZE_TOOLCHANGER
    STOP_TOOL_PROBE_CRASH_DETECTION
    {% if printer.probe.last_query %}
        RESPOND TYPE=echo MSG='Z Probe triggered, cannot home.'
    {% else %}
        ## Trigger variables
        {% set x = 0 %}
        {% set y = 0 %}
        {% set z = 0 %}

        ##  Engage trigger variables according to the input
        {% if params.Y is defined %}
            {% set y = 1 %}    # for y home
        {% endif %}
        {% if params.X is defined %}
            {% set x = 1 %}    # for x home
        {% endif %}
        {% if params.Z is defined %}
            {% set z = 1 %}    # for z home
        {% endif %}

        ## Homing Actions
        {% if x == 0 and y == 0 and z == 0 %}    ## If just G28 is called
            {% if "z" in printer.toolhead.homed_axes %}    # if both z is already homed
                G91                                        # Relative mode 
                G1 Z+2 F1500                               # move Z up 2mm
                G90                                        # Asolute mode
            {% else %}                                     # Otherwise
                SET_KINEMATIC_POSITION Z=0                 # Set curent Z position as 0
                G91                                        # Relative mode 
                G1 Z+5 F1500                               # move Z up 5mm
                G90                                        # Asolute mode
            {% endif %}
            G28 Y
            G28 X
            G1 X175 Y175 F9000
            G28 Z
            G1 Z20 F1000
        {% else %}
            {% if x == 1 and y == 1 %}   # if x and y are both triggered
                {% if "z" in printer.toolhead.homed_axes %}    # if both z is already homed
                    G91                                        # Relative mode 
                    G1 Z+2 F1500                               # move Z up 2mm
                    G90                                        # Asolute mode
                {% else %}                                     # Otherwise
                    SET_KINEMATIC_POSITION Z=0                 # Set curent Z position as 0
                    G91                                        # Relative mode 
                    G1 Z+5 F1500                               # move Z up 5mm
                    G90                                        # Asolute mode
                {% endif %}
                G28 Y
                G28 X
            {% else %}
                {% if x == 1 %}                                    # for x home y first then X
                    {% if "z" in printer.toolhead.homed_axes %}    # if both z is already homed
                        G91                                        # Relative mode 
                        G1 Z+2 F1500                               # move Z up 2mm
                        G90                                        # Asolute mode
                    {% else %}                                     # Otherwise
                        SET_KINEMATIC_POSITION Z=0                 # Set curent Z position as 0
                        G91                                        # Relative mode 
                        G1 Z+5 F1500                               # move Z up 5mm
                        G90                                        # Asolute mode
                    {% endif %}
                    G28 Y
                    G28 X
                {% endif %}
                {% if y == 1 %}    # for y home just y
                    {% if "z" in printer.toolhead.homed_axes %}    # if both z is already homed
                        G91                                        # Relative mode 
                        G1 Z+2 F1500                               # move Z up 2mm
                        G90                                        # Asolute mode
                    {% else %}                                     # Otherwise
                        SET_KINEMATIC_POSITION Z=0                 # Set curent Z position as 0
                        G91                                        # Relative mode 
                        G1 Z+5 F1500                               # move Z up 5mm
                        G90                                        # Asolute mode
                    {% endif %}
                G28 Y
                {% endif %}
                {% if z == 1 %}    # for z home just z
                    {% if "xy" in printer.toolhead.homed_axes %}    # if both x and y are defined
                        SET_KINEMATIC_POSITION Z=0                  # Set curent Z position as 0
                        G91                                         # Relative mode 
                        G1 Z+2 F1500                                # move Z up 2mm
                        G90                                         # Asolute mode
                        G1 X175 Y175 F9000
                        G28 Z
                        G1 Z10 F1000
                    {% else %}
                        SET_KINEMATIC_POSITION Z=0             # Set curent Z position as 0
                        G91                                    # Relative mode 
                        G1 Z+5 F1500                           # move Z up 5mm
                        G90                                    # Asolute mode
                        G28 Y
                        G28 X
                        G1 X175 Y175 F9000
                        G28 Z
                        G1 Z10 F1000
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}
    _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
    M400
    {% endif %}

    
#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:233,349
#speed:300
#z_hop:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10



##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG9, EXP1_2=PG12,
    EXP1_3=PG13, EXP1_4=PG14,
    EXP1_5=PC13, EXP1_6=PC14,    # Slot in the socket on this side
    EXP1_7=PC15, EXP1_8=PF0,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE2, EXP2_4=PE4,
    EXP2_5=PE3, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PE5, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PE4


#####################################################################
#   Bed Mesh Leveling
#####################################################################

[bed_mesh]
speed: 180
horizontal_move_z: 5
mesh_min: 30,30 
mesh_max: 330, 330
probe_count: 13, 13
move_check_distance: 5
split_delta_z: .025
algorithm:bicubic
fade_start: 1
fade_end: 10
fade_target: 0
zero_reference_position: 180, 180
adaptive_margin: 5

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE


#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
 #   {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
 #   {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
 #   # Start bed heating
 #   M104 S{EXTRUDER_TEMP}
 #   M190 S{BED_TEMP}
 #   SET_ACTIVE_TOOL_PROBE T=0
 #   # Use absolute coordinates
 #   G90
 #   # Reset the G-Code Z offset (adjust Z offset if needed)
 #   SET_GCODE_OFFSET Z=0.0
 #   # Home the printer
 #   G32
 #   # Move the nozzle near the bed
 #   G1 Z5 F3000
 #   # Set and wait for nozzle to reach temperature
 #   M109 S{EXTRUDER_TEMP}
 #   BED_MESH_PROFILE LOAD='default'
 #   VORON_PURGE
   

#[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:
#    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#   {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-5.0 F1800                 ; retract filament
    
#    TURN_OFF_HEATERS
    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
    
#    BED_MESH_CLEAR
#    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    #SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 1.350
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.006
#*# pid_ki = 3.719
#*# pid_kd = 56.562
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 44.256
#*# pid_ki = 1.994
#*# pid_kd = 245.622
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 60.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 45.2
#*#
#*# [stepper_z]
#*# position_endstop = 1.097
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.027500, -0.016250, -0.013750, -0.020000, -0.010000, -0.007500, 0.006250, 0.010000, 0.012500, 0.007500, 0.008750, -0.007500, -0.025000
#*# 	0.008750, 0.002500, 0.006250, 0.001250, -0.015000, -0.002500, 0.003750, 0.012500, 0.020000, 0.010000, 0.003750, -0.016250, -0.031250
#*# 	0.005000, 0.000000, 0.002500, -0.006250, -0.027500, -0.008750, -0.006250, 0.002500, 0.003750, -0.003750, 0.001250, -0.012500, -0.030000
#*# 	0.005000, -0.002500, -0.007500, -0.011250, -0.030000, -0.020000, -0.017500, -0.005000, -0.001250, -0.001250, 0.003750, -0.027500, -0.035000
#*# 	0.008750, -0.005000, -0.005000, -0.003750, -0.023750, -0.015000, -0.017500, -0.005000, -0.002500, -0.006250, -0.006250, -0.020000, -0.033750
#*# 	0.015000, 0.001250, 0.005000, 0.007500, -0.000000, -0.000000, -0.012500, 0.006250, 0.007500, 0.001250, -0.011250, -0.023750, -0.032500
#*# 	0.011250, 0.001250, 0.002500, 0.005000, 0.003750, -0.000000, 0.000000, 0.006250, 0.002500, -0.005000, 0.008750, -0.005000, -0.006250
#*# 	0.011250, 0.003750, -0.000000, 0.002500, 0.003750, 0.001250, -0.000000, 0.006250, 0.003750, 0.002500, 0.001250, -0.018750, -0.013750
#*# 	-0.000000, -0.006250, -0.007500, -0.002500, -0.001250, -0.003750, -0.003750, 0.005000, 0.007500, -0.001250, 0.011250, 0.003750, 0.005000
#*# 	0.002500, 0.002500, -0.005000, -0.002500, 0.002500, 0.002500, 0.007500, 0.017500, 0.025000, 0.027500, 0.031250, 0.008750, 0.011250
#*# 	0.003750, 0.032500, 0.026250, -0.001250, -0.000000, 0.002500, 0.002500, 0.013750, 0.018750, 0.018750, 0.040000, 0.028750, 0.021250
#*# 	-0.007500, 0.031250, 0.038750, 0.001250, 0.001250, 0.008750, 0.013750, 0.022500, 0.032500, 0.041250, 0.045000, 0.032500, 0.032500
#*# 	-0.000000, 0.026250, 0.027500, -0.000000, 0.017500, 0.022500, 0.023750, 0.032500, 0.032500, 0.036250, 0.051250, 0.047500, 0.042500
#*# x_count = 13
#*# y_count = 13
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 330.0
#*# min_y = 30.0
#*# max_y = 330.0
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 36.162
#*# pid_ki = 4.636
#*# pid_kd = 70.516
#*#
#*# [extruder2]
#*# control = pid
#*# pid_kp = 31.731
#*# pid_ki = 3.917
#*# pid_kd = 64.256
#*#
#*# [extruder3]
#*# control = pid
#*# pid_kp = 36.623
#*# pid_ki = 4.607
#*# pid_kd = 72.788
#*#
#*# [extruder4]
#*# control = pid
#*# pid_kp = 36.611
#*# pid_ki = 4.694
#*# pid_kd = 71.392
#*#
#*# [tool_probe_endstop]
#*# z_offset = -1.040
